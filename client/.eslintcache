[{"/Users/ramazanekici/Desktop/xt/client/src/index.js":"1","/Users/ramazanekici/Desktop/xt/client/src/serviceWorker.js":"2","/Users/ramazanekici/Desktop/xt/client/src/App.js":"3","/Users/ramazanekici/Desktop/xt/client/src/store/store.js":"4","/Users/ramazanekici/Desktop/xt/client/src/redux/textSlice.js":"5","/Users/ramazanekici/Desktop/xt/client/src/components/UI/TextArea.js":"6","/Users/ramazanekici/Desktop/xt/client/src/components/Layout.js":"7","/Users/ramazanekici/Desktop/xt/client/src/components/Sidebar.js":"8","/Users/ramazanekici/Desktop/xt/client/src/components/TextEditor.js":"9","/Users/ramazanekici/Desktop/xt/client/src/components/UI/Button.js":"10","/Users/ramazanekici/Desktop/xt/client/src/components/UI/Input.js":"11"},{"size":439,"mtime":1612211182357,"results":"12","hashOfConfig":"13"},{"size":5141,"mtime":1612189574999,"results":"14","hashOfConfig":"13"},{"size":214,"mtime":1612193446879,"results":"15","hashOfConfig":"13"},{"size":184,"mtime":1612190477265,"results":"16","hashOfConfig":"13"},{"size":1961,"mtime":1612206887493,"results":"17","hashOfConfig":"13"},{"size":375,"mtime":1612207782452,"results":"18","hashOfConfig":"13"},{"size":1263,"mtime":1612210896140,"results":"19","hashOfConfig":"13"},{"size":1277,"mtime":1612210836275,"results":"20","hashOfConfig":"13"},{"size":649,"mtime":1612210863350,"results":"21","hashOfConfig":"13"},{"size":280,"mtime":1612209339421,"results":"22","hashOfConfig":"13"},{"size":310,"mtime":1612207409096,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2zdja9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/ramazanekici/Desktop/xt/client/src/index.js",[],"/Users/ramazanekici/Desktop/xt/client/src/serviceWorker.js",[],["49","50"],"/Users/ramazanekici/Desktop/xt/client/src/App.js",[],"/Users/ramazanekici/Desktop/xt/client/src/store/store.js",[],"/Users/ramazanekici/Desktop/xt/client/src/redux/textSlice.js",["51"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const textSlice = createSlice({\r\n  name: 'texts',\r\n  initialState: {\r\n    texts: [],\r\n    textItem: { title: '', text: '' },\r\n    error: {},\r\n    message: ''\r\n  },\r\n  reducers: {\r\n    setInitial: (state) => {\r\n      state.error = {};\r\n      state.textItem = { title: '', text: '' };\r\n    },\r\n    setMessage: (state, action) => {\r\n      state.message = action.payload;\r\n    },\r\n    setText: (state, action) => {\r\n      state.texts = action.payload;\r\n    },\r\n    setTextItem: (state, action) => {\r\n      state.textItem = action.payload;\r\n    },\r\n    dataFailed: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setText, setTextItem, dataFailed, setInitial, setMessage } = textSlice.actions;\r\n\r\nexport const sendTextNode = data => async dispatch => {\r\n\r\n  try {\r\n    const resp = await fetch('http://localhost:5000/text/create',\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(data)\r\n      });\r\n    dispatch(setInitial());\r\n    //dispatch(setMessage(resp.data.message))\r\n    dispatch(fetchNode());\r\n  } catch (err) {\r\n    dispatch(dataFailed(err.response));\r\n  }\r\n\r\n};\r\n\r\nexport const fetchNode = () => async dispatch => {\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:5000/text');\r\n    const data = await response.json();\r\n    dispatch(setText(data));\r\n  } catch (err) {\r\n    dispatch(dataFailed(err.response));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const fetchTextItem = (name) => async dispatch => {\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/text/${name}`);\r\n    const data = await response.json();\r\n    dispatch(setTextItem(data));\r\n  } catch (err) {\r\n    dispatch(dataFailed(err.response));\r\n  }\r\n\r\n};\r\n\r\n\r\nexport const selectText = state => state.texts;\r\n\r\nexport default textSlice.reducer;\r\n","/Users/ramazanekici/Desktop/xt/client/src/components/UI/TextArea.js",[],["52","53"],"/Users/ramazanekici/Desktop/xt/client/src/components/Layout.js",[],"/Users/ramazanekici/Desktop/xt/client/src/components/Sidebar.js",[],"/Users/ramazanekici/Desktop/xt/client/src/components/TextEditor.js",[],"/Users/ramazanekici/Desktop/xt/client/src/components/UI/Button.js",[],"/Users/ramazanekici/Desktop/xt/client/src/components/UI/Input.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":36,"column":11,"nodeType":"60","messageId":"61","endLine":36,"endColumn":15},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'resp' is assigned a value but never used.","Identifier","unusedVar",["64"],["65"],"no-global-assign","no-unsafe-negation"]